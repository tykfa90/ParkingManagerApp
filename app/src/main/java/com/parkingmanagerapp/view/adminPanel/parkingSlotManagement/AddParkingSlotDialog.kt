package com.parkingmanagerapp.view.adminPanel.parkingSlotManagement

import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material3.AlertDialog
import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.unit.dp
import com.parkingmanagerapp.model.ParkingSlot

@Composable
fun AddParkingSlotDialog(
    onDismiss: () -> Unit,
    onSave: (ParkingSlot) -> Unit
) {
    var slotLabel by remember { mutableStateOf("") }
    var slotLength by remember { mutableStateOf("") }
    var slotWidth by remember { mutableStateOf("") }
    var slotHeight by remember { mutableStateOf("") }

    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text(text = "Add Parking Slot") },
        text = {
            Column {
                TextField(
                    value = slotLabel,
                    onValueChange = { slotLabel = it },
                    label = { Text("Slot Label") }
                )
                Spacer(modifier = Modifier.height(8.dp))
                TextField(
                    value = slotLength,
                    onValueChange = { slotLength = it },
                    label = { Text("Slot Length") },
                    keyboardOptions = KeyboardOptions.Default.copy(keyboardType = KeyboardType.Number)
                )
                Spacer(modifier = Modifier.height(8.dp))
                TextField(
                    value = slotWidth,
                    onValueChange = { slotWidth = it },
                    label = { Text("Slot Width") },
                    keyboardOptions = KeyboardOptions.Default.copy(keyboardType = KeyboardType.Number)
                )
                Spacer(modifier = Modifier.height(8.dp))
                TextField(
                    value = slotHeight,
                    onValueChange = { slotHeight = it },
                    label = { Text("Slot Height") },
                    keyboardOptions = KeyboardOptions.Default.copy(keyboardType = KeyboardType.Number)
                )
            }
        },
        confirmButton = {
            Button(onClick = {
                val newSlot = ParkingSlot(
                    slotID = "", // This will be auto-generated by Firestore
                    slotLabel = slotLabel,
                    isOccupied = false, // Default to unoccupied
                    slotLength = slotLength.toDoubleOrNull() ?: 0.0,
                    slotWidth = slotWidth.toDoubleOrNull() ?: 0.0,
                    slotHeight = slotHeight.toDoubleOrNull() ?: 0.0
                )
                onSave(newSlot)
            }) {
                Text("Save")
            }
        },
        dismissButton = {
            Button(onClick = onDismiss) {
                Text("Cancel")
            }
        }
    )
}